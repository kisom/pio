#include <Arduino.h>

typedef object *(*fn_ptr_type)(object *, object *);

void initworkspace () ;
object *myalloc () ;
inline void myfree (object *obj) ;
object *number (int n) ;
object *makefloat (float f) ;
object *character (char c) ;
object *cons (object *arg1, object *arg2) ;
object *symbol (symbol_t name) ;
object *newsymbol (symbol_t name) ;
object *stream (unsigned char streamtype, unsigned char address) ;
void markobject (object *obj) ;
void sweep () ;
void gc (object *form, object *env) ;
void movepointer (object *from, object *to) ;
int compactimage (object **arg) ;
char *MakeFilename (object *arg) ;
void SDWriteInt (File file, int data) ;
boolean FlashSetup () ;
inline void FlashWrite (uint8_t data) ;
void FlashBusy () ;
void FlashWriteEnable () ;
void FlashBeginRead () ;
inline uint8_t FlashRead () ;
inline void FlashEndRead(void) ;
void FlashBeginWrite () ;
inline uint8_t FlashReadByte () ;
void FlashWriteByte (unsigned int *addr, uint8_t data) ;
inline void FlashEndWrite (void) ;
void FlashWriteInt (unsigned int *addr, int data) ;
int saveimage (object *arg) ;
int SDReadInt (File file) ;
int FlashReadInt () ;
int loadimage (object *filename) ;
void autorunimage () ;
void error (const char *string) ;
void error2 (object *symbol, const char *string) ;
boolean tracing (symbol_t name) ;
void trace (symbol_t name) ;
void untrace (symbol_t name) ;
boolean consp (object *x) ;
boolean atom (object *x) ;
boolean listp (object *x) ;
int toradix40 (char ch) ;
int fromradix40 (int n) ;
int pack40 (char *buffer) ;
boolean valid40 (char *buffer) ;
int digitvalue (char d) ;
char *name (object *obj);
int integer (object *obj);
float fromfloat (object *obj);
float intfloat (object *obj);
int fromchar (object *obj);
int istream (object *obj);
int issymbol (object *obj, symbol_t n) ;
int eq (object *arg1, object *arg2) ;
int listlength (object *list) ;
object *assoc (object *key, object *list) ;
object *delassoc (object *key, object **alist) ;
void indent (int spaces, pfun_t pfun) ;
void buildstring (char ch, int *chars, object **head) ;
object *readstring (char delim, gfun_t gfun) ;
int stringlength (object *form) ;
char nthchar (object *string, int n) ;
object *value (symbol_t n, object *env) ;
object *findvalue (object *var, object *env) ;
object *findtwin (object *var, object *env) ;
object *closure (int tc, object *fname, object *state, object *function, object *args, object **env) ;
object *apply (object *function, object *args, object **env) ;
object **place (object *args, object *env) ;
inline object *carx (object *arg) ;
inline object *cdrx (object *arg) ;
void I2Cinit(bool enablePullup) ;
inline uint8_t I2Cread() ;
inline bool I2Cwrite(uint8_t data) ;
bool I2Cstart(uint8_t address, uint8_t read) ;
bool I2Crestart(uint8_t address, uint8_t read) ;
void I2Cstop(uint8_t read) ;
inline int SDread () ;
void serialbegin (int address, int baud) ;
void serialend (int address) ;
gfun_t gstreamfun (object *args) ;
pfun_t pstreamfun (object *args) ;
void checkanalogread (int pin) ;
void checkanalogwrite (int pin) ;
void tone (int pin, int note) ;
void noTone (int pin) ;
void playnote (int pin, int note, int octave) ;
void nonote (int pin) ;
void WDT_Handler(void) ;
void initsleep () ;
void sleep (int secs) ;
object *sp_quote (object *args, object *env) ;
object *sp_defun (object *args, object *env) ;
object *sp_defvar (object *args, object *env) ;
object *sp_setq (object *args, object *env) ;
object *sp_loop (object *args, object *env) ;
object *sp_push (object *args, object *env) ;
object *sp_pop (object *args, object *env) ;
object *sp_incf (object *args, object *env) ;
object *sp_decf (object *args, object *env) ;
object *sp_setf (object *args, object *env) ;
object *sp_dolist (object *args, object *env) ;
object *sp_dotimes (object *args, object *env) ;
object *sp_trace (object *args, object *env) ;
object *sp_untrace (object *args, object *env) ;
object *sp_formillis (object *args, object *env) ;
object *sp_withserial (object *args, object *env) ;
object *sp_withi2c (object *args, object *env) ;
object *sp_withspi (object *args, object *env) ;
object *sp_withsdcard (object *args, object *env) ;
object *tf_progn (object *args, object *env) ;
object *tf_return (object *args, object *env) ;
object *tf_if (object *args, object *env) ;
object *tf_cond (object *args, object *env) ;
object *tf_when (object *args, object *env) ;
object *tf_unless (object *args, object *env) ;
object *tf_and (object *args, object *env) ;
object *tf_or (object *args, object *env) ;
object *fn_not (object *args, object *env) ;
object *fn_cons (object *args, object *env) ;
object *fn_atom (object *args, object *env) ;
object *fn_listp (object *args, object *env) ;
object *fn_consp (object *args, object *env) ;
object *fn_symbolp (object *args, object *env) ;
object *fn_streamp (object *args, object *env) ;
object *fn_eq (object *args, object *env) ;
object *fn_car (object *args, object *env) ;
object *fn_cdr (object *args, object *env) ;
object *fn_caar (object *args, object *env) ;
object *fn_cadr (object *args, object *env) ;
object *fn_cdar (object *args, object *env) ;
object *fn_cddr (object *args, object *env) ;
object *fn_caaar (object *args, object *env) ;
object *fn_caadr (object *args, object *env) ;
object *fn_cadar (object *args, object *env) ;
object *fn_caddr (object *args, object *env) ;
object *fn_cdaar (object *args, object *env) ;
object *fn_cdadr (object *args, object *env) ;
object *fn_cddar (object *args, object *env) ;
object *fn_cdddr (object *args, object *env) ;
object *fn_length (object *args, object *env) ;
object *fn_list (object *args, object *env) ;
object *fn_reverse (object *args, object *env) ;
object *fn_nth (object *args, object *env) ;
object *fn_assoc (object *args, object *env) ;
object *fn_member (object *args, object *env) ;
object *fn_apply (object *args, object *env) ;
object *fn_funcall (object *args, object *env) ;
object *fn_append (object *args, object *env) ;
object *fn_mapc (object *args, object *env) ;
object *fn_mapcar (object *args, object *env) ;
object *add_floats (object *args, float fresult) ;
object *fn_add (object *args, object *env) ;
object *subtract_floats (object *args, float fresult) ;
object *negate (object *arg) ;
object *fn_subtract (object *args, object *env) ;
object *multiply_floats(object *args, float fresult) ;
object *fn_multiply (object *args, object *env) ;
object *divide_floats (object *args, float fresult) ;
object *fn_divide (object *args, object *env) ;
object *fn_mod (object *args, object *env) ;
object *fn_oneplus (object *args, object *env) ;
object *fn_oneminus (object *args, object *env) ;
object *fn_abs (object *args, object *env) ;
object *fn_random (object *args, object *env) ;
object *fn_maxfn (object *args, object *env) ;
object *fn_minfn (object *args, object *env) ;
object *fn_noteq (object *args, object *env) ;
object *fn_numeq (object *args, object *env) ;
object *fn_less (object *args, object *env) ;
object *fn_lesseq (object *args, object *env) ;
object *fn_greater (object *args, object *env) ;
object *fn_greatereq (object *args, object *env) ;
object *fn_plusp (object *args, object *env) ;
object *fn_minusp (object *args, object *env) ;
object *fn_zerop (object *args, object *env) ;
object *fn_oddp (object *args, object *env) ;
object *fn_evenp (object *args, object *env) ;
object *fn_integerp (object *args, object *env) ;
object *fn_numberp (object *args, object *env) ;
object *fn_floatfn (object *args, object *env) ;
object *fn_floatp (object *args, object *env) ;
object *fn_sin (object *args, object *env) ;
object *fn_cos (object *args, object *env) ;
object *fn_tan (object *args, object *env) ;
object *fn_asin (object *args, object *env) ;
object *fn_acos (object *args, object *env) ;
object *fn_atan (object *args, object *env) ;
object *fn_sinh (object *args, object *env) ;
object *fn_cosh (object *args, object *env) ;
object *fn_tanh (object *args, object *env) ;
object *fn_exp (object *args, object *env) ;
object *fn_sqrt (object *args, object *env) ;
object *fn_log (object *args, object *env) ;
int intpower (int base, int exp) ;
object *fn_expt (object *args, object *env) ;
object *fn_ceiling (object *args, object *env) ;
object *fn_floor (object *args, object *env) ;
object *fn_truncate (object *args, object *env) ;
int myround (float number) ;
object *fn_round (object *args, object *env) ;
object *fn_char (object *args, object *env) ;
object *fn_charcode (object *args, object *env) ;
object *fn_codechar (object *args, object *env) ;
object *fn_characterp (object *args, object *env) ;
object *fn_stringp (object *args, object *env) ;
bool stringcompare (object *args, bool lt, bool gt, bool eq) ;
object *fn_stringeq (object *args, object *env) ;
object *fn_stringless (object *args, object *env) ;
object *fn_stringgreater (object *args, object *env) ;
object *fn_sort (object *args, object *env) ;
object *fn_stringfn (object *args, object *env) ;
object *fn_concatenate (object *args, object *env) ;
object *fn_subseq (object *args, object *env) ;
int gstr () ;
void pstr (char c) ;
object *fn_logand (object *args, object *env) ;
object *fn_logior (object *args, object *env) ;
object *fn_logxor (object *args, object *env) ;
object *fn_lognot (object *args, object *env) ;
object *fn_ash (object *args, object *env) ;
object *fn_logbitp (object *args, object *env) ;
object *fn_eval (object *args, object *env) ;
object *fn_globals (object *args, object *env) ;
object *fn_locals (object *args, object *env) ;
object *fn_makunbound (object *args, object *env) ;
object *fn_break (object *args, object *env) ;
object *fn_read (object *args, object *env) ;
object *fn_prin1 (object *args, object *env) ;
object *fn_print (object *args, object *env) ;
object *fn_princ (object *args, object *env) ;
object *fn_terpri (object *args, object *env) ;
object *fn_readbyte (object *args, object *env) ;
object *fn_readline (object *args, object *env) ;
object *fn_writebyte (object *args, object *env) ;
object *fn_writestring (object *args, object *env) ;
object *fn_writeline (object *args, object *env) ;
object *fn_restarti2c (object *args, object *env) ;
object *fn_gc (object *obj, object *env) ;
object *fn_room (object *args, object *env) ;
object *fn_saveimage (object *args, object *env) ;
object *fn_loadimage (object *args, object *env) ;
object *fn_cls (object *args, object *env) ;
object *fn_pinmode (object *args, object *env) ;
object *fn_digitalread (object *args, object *env) ;
object *fn_digitalwrite (object *args, object *env) ;
object *fn_analogread (object *args, object *env) ;
object *fn_analogwrite (object *args, object *env) ;
object *fn_delay (object *args, object *env) ;
object *fn_millis (object *args, object *env) ;
object *fn_sleep (object *args, object *env) ;
object *fn_note (object *args, object *env) ;
object *fn_edit (object *args, object *env) ;
object *edit (object *fun) ;
void pcount (char c) ;
int atomwidth (object *obj) ;
boolean quoted (object *obj) ;
int subwidth (object *obj, int w) ;
int subwidthlist (object *form, int w) ;
void superprint (object *form, int lm, pfun_t pfun) ;
void supersub (object *form, int lm, int super, pfun_t pfun) ;
object *fn_pprint (object *args, object *env) ;
object *fn_pprintall (object *args, object *env) ;
const tbl_entry_t lookup_table[] PROGMEM = ;
int builtin (char* n) ;
int longsymbol (char *buffer) ;
intptr_t lookupfn (symbol_t name) ;
uint8_t lookupmin (symbol_t name) ;
uint8_t lookupmax (symbol_t name) ;
char *lookupbuiltin (symbol_t name) ;
char *lookupsymbol (symbol_t name) ;
void deletesymbol (symbol_t name) ;
void testescape () ;
object *eval (object *form, object *env) ;
inline int maxbuffer (char *buffer) ;
void pserial (char c) ;
void pcharacter (char c, pfun_t pfun) ;
void pstring (char *s, pfun_t pfun) ;
void printstring (object *form, pfun_t pfun) ;
void pfstring (const char *s, pfun_t pfun) ;
void pint (int i, pfun_t pfun) ;
void pmantissa (float f, pfun_t pfun) ;
void pfloat (float f, pfun_t pfun) ;
inline void pln (pfun_t pfun) ;
void pfl (pfun_t pfun) ;
void printobject (object *form, pfun_t pfun);
int glibrary () ;
int gserial () ;
object *nextitem (gfun_t gfun) ;
object *readrest (gfun_t gfun) ;
object *read (gfun_t gfun) ;
void initenv () ;
void setup () ;
void repl (object *env) ;
